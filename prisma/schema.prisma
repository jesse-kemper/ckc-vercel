generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  locationId    Int?
  accounts      Account[]
  sessions      Session[]
}

model PetLog {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  petName          String
  roomNumber       String
  date             DateTime
  elimination      String
  consumption      String
  medication       String
  gcu              String
  tmInitials       String
  smellDirty       Boolean
  pawsSoiled       Boolean
  bodySoiled       Boolean
  oilyDirty        Boolean
  petType          String
  petReservationId String

  centerId         Int
  location         Location  @relation(fields: [centerId], references: [centerId]) // Define the relationship
}

model Location {
  id           Int      @id @default(autoincrement())
  centerId     Int      @unique // Ensure `centerId` is unique to allow reference
  locationName String
  email        String?  @unique
  phone        String?
  address      String?
  cityState    String?
  zip          String?
  password     String?

  petLogs      PetLog[] // Back-reference to PetLogs
}

